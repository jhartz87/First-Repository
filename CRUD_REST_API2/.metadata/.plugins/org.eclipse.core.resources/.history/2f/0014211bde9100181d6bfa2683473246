package service;

import java.util.Hashtable;

import org.springframework.stereotype.Service;

import model.Collection;

@Service
public class CollectionService {
	
	Hashtable<String, Collection> collection = new Hashtable<String, Collection>();
	
	public CollectionService() {
		Collection firstCollection = new Collection();
		int id = firstCollection.getId();
		id++;
		firstCollection.setId(id);
		firstCollection.setProduct("Basketball Jersey");
		firstCollection.setTeamName("Portland Trailblazers");
		collection.put("1", firstCollection);

		Collection secondCollection = new Collection();
		id = secondCollection.getId();
		id++;
		secondCollection.setId(id);
		secondCollection.setProduct("Basketball Jersey");
		secondCollection.setTeamName("Golden State Knights");
		collection.put("2", secondCollection);
	}
	
	public Collection getCollection(String product) {
		if (collection.containsKey(product))
			return collection.get(product);
		else
			return null;
	}
	
	public Hashtable<String, Collection> getAll() {
		return collection;
	}
	
	public Hashtable<String, Collection> createEntry(String val1, String val2) {
		Collection newCollection = new Collection();
		int id = newCollection.getId();
		newCollection.setId(id++);
		newCollection.setProduct(val1);
		newCollection.setTeamName(val2);
		collection.put("3", newCollection);
		return collection;
	}

	public Hashtable<String, Collection> updateEntry(int id, String val1, String val2) {
		// If id exists, then update that entry
		// If id doesn't exist, then respond with HttpStatus.NOT_FOUND unable to update user
		// Return new Collection entry
		return null;
	}

	public Hashtable<String, Collection> deleteEntry(int id) {
		// If id exists, then delete entry 
		// If id doesn't exist, then response with HttpStatus.NOT_FOUND unable to delete user
		return null;
	}
}